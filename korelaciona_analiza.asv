%[text] ## Ucitavanje podataka
clear
load("GHSI_2021_transformed_data.mat");
load("PCA_data.mat");
% GHSI_2019_matrix = table2array(GHSI_2019_table);
%[text] ## Korelaciona analiza izmedju rezultat PCA i odgovarajucih podataka
pocetni_podaci = {GHSI_2021, GHSI_2019, starost, bolesti, prosperitet};
podaci_pca = {GHSI_2021_PCS, GHSI_2019_PCS, starost_PCS, bolesti_PCS, prosperitet_PCS};
nazivi_grupaVsPC = {'GHSI_2021_vsPC', 'GHSI_2019_vsPC', 'starost_vsPC', 'bolesti_vsPC', 'prosperitet_vsPC'};
rezultati_CORR_PC = struct();
for i = 1:length(podaci_pca)
    pc_data = table2array(podaci_pca{i});
    combined_data = [pocetni_podaci{i},pc_data];
    [coeff, p_values] = corr(combined_data);

    rezultati_CORR_PC.(nazivi_grupaVsPC{i}).coeff = coeff;
    rezultati_CORR_PC.(nazivi_grupaVsPC{i}).p_values = p_values;
end

disp(rezultati_CORR_PC.GHSI_2019_vsPC.coeff); %[output:59a16715]

%[text] ## Korelacija izmedju znacajnih PCs i m/r
PC_data = {GHSI_2021_PCS, GHSI_2019_PCS, bolesti_PCS, prosperitet_PCS, starost_PCS};
nazivi = {'GHSI_2021','GHSI_2019','bolesti','prosperitet', 'startos'};
m_r = GHSI_2019_table{:,1};
for i = 1:length(PC_data)
    X = [PC_data{i}{:,:}, m_r];
    nazivi_PCmr = [PC_data{i}.Properties.VariableNames, 'mr'];

    [r, p] = corr(X);
    %eval izvrsava kod dok sprintf daje mogucnost modularne promene
    %varijable koju kreiramo
    eval(sprintf('R_%s_table = array2table(r, ''VariableNames'', nazivi_PCmr, ''RowNames'', nazivi_PCmr);', nazivi{i}));
    eval(sprintf('P_%s_table = array2table(p, ''VariableNames'', nazivi_PCmr, ''RowNames'', nazivi_PCmr);', nazivi{i}));
end
varlist_PCmr = {};
for i = 1:length(nazivi)
    % dodajemo na kraj varlist sve tabele
    varlist_PCmr{end+1} = sprintf('R_%s_table', nazivi{i}); 
    varlist_PCmr{end+1} = sprintf('P_%s_table', nazivi{i});
end
save('PC_vs_mr_tables.mat', varlist_PCmr{:});
%[text] ## Korelacija varijabli koje nisu usle u PCA i m/r
% izdvajanje kolona koje nisu usli u PCA analizu
vars_noPCA = {'IE','RE','OB','SM','IN','BCG','ON'};
[ok, idx] = ismember(vars_noPCA, GHSI_2019_table.Properties.VariableNames);
x_noPCA = GHSI_2019_table(:, idx);


for i = 1:length(vars_noPCA)
    xi = GHSI_2019_table{:, idx(i)};      % numeric kolona
    X  = [xi, m_r]; 
    nazivi_noPCmr = [string(vars_noPCA{i}), 'mr'];
    [r, p] = corr(X);
    eval(sprintf('R_%s_table = array2table(r, ''VariableNames'', nazivi_noPCmr, ''RowNames'', nazivi_noPCmr);', vars_noPCA{i}));
    eval(sprintf('P_%s_table = array2table(p, ''VariableNames'', nazivi_noPCmr, ''RowNames'', nazivi_noPCmr);', vars_noPCA{i}));
end
varlist_noPCmr = {};
for i = 1:length(vars_noPCA)
    varlist_noPCmr{end+1} = sprintf('R_%s_table', vars_noPCA{i}); 
    varlist_noPCmr{end+1} = sprintf('P_%s_table', vars_noPCA{i});
end
save('noPC_vs_mr_tables.mat', varlist_noPCmr{:});

%[text] ## Statisticki znacajno korelisane PC i varijable sa m/r
% statisticki znacajne PC
PC_p_values = {P_GHSI_2021_table, P_GHSI_2019_table, P_bolesti_table, P_prosperitet_table, P_startos_table};
significantPCs = {};
for i=1:length(PC_p_values)
    
    current_pcGroup = PC_p_values{i}{:,:}; %trenutna tabela
    pvec = current_pcGroup(1:end-1, end); %svi PC vs mr
    idx = find(pvec < 0.05); % indeks p-vrednosti ispod 0.05
    names = PC_p_values{i}.Properties.RowNames(1:end-1); % imena kolona za trenutnu tabelu
    
    significantPCs{end+1} = table(names(idx), pvec(idx), 'VariableNames', {'Var','p'});
    
end

%Statisticki zancajne varijable koje nisu usle u PCA
noPC_p_values = {P_IE_table, P_RE_table, P_OB_table, P_SM_table, P_IN_table, P_BCG_table, P_ON_table};
significantVars = {};
for i = 1:length(noPC_p_values)
    current_varGroup = noPC_p_values{i}{:,:}; % trenutna tabela
    pvec_noPC = current_varGroup(1:end-1, end); % svi varijable vs mr
    idx_noPC = find(pvec_noPC < 0.05); % indeks p-vrednosti ispod 0.05
    names_noPC = noPC_p_values{i}.Properties.RowNames(1:end-1); % imena kolona za trenutnu tabelu
    
    if any(idx)
        significantVars{end+1} = table(names(idx), pvec(idx), ...
            'VariableNames', {'Var','p'});
    end
end

significantVars{10} %[output:1648ee7a]

%[appendix]{"version":"1.0"}
%---
%[metadata:view]
%   data: {"layout":"onright"}
%---
%[output:59a16715]
%   data: {"dataType":"text","outputData":{"text":"    1.0000    0.8948    0.8423    0.8194    0.8992    0.6941    0.7038    0.9948   -0.0185   -0.0390\n    0.8948    1.0000    0.6820    0.6617    0.8003    0.6194    0.6613    0.9064    0.0410   -0.0945\n    0.8423    0.6820    1.0000    0.5672    0.6436    0.5713    0.4466    0.8077   -0.2468   -0.4204\n    0.8194    0.6617    0.5672    1.0000    0.7503    0.5299    0.5246    0.8258    0.0231    0.4586\n    0.8992    0.8003    0.6436    0.7503    1.0000    0.5545    0.6838    0.9099    0.1528    0.1072\n    0.6941    0.6194    0.5713    0.5299    0.5545    1.0000    0.2978    0.7152   -0.5646    0.1036\n    0.7038    0.6613    0.4466    0.5246    0.6838    0.2978    1.0000    0.7291    0.5847   -0.1181\n    0.9948    0.9064    0.8077    0.8258    0.9099    0.7152    0.7291    1.0000   -0.0000   -0.0000\n   -0.0185    0.0410   -0.2468    0.0231    0.1528   -0.5646    0.5847   -0.0000    1.0000   -0.0000\n   -0.0390   -0.0945   -0.4204    0.4586    0.1072    0.1036   -0.1181   -0.0000   -0.0000    1.0000\n\n","truncated":false}}
%---
%[output:1648ee7a]
%   data: {"dataType":"error","outputData":{"errorType":"runtime","text":"Index exceeds the number of array elements. Index must not exceed 7."}}
%---
